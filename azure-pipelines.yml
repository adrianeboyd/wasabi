trigger:
  batch: true
  branches:
    include:
    - '*'

jobs:

- job: 'Test'
  strategy:
    matrix:
      Python27Linux:
        imageName: 'ubuntu-20.04'
        python.version: '2.7'
      Python27LinuxASCII:
        imageName: 'ubuntu-20.04'
        python.version: '2.7'
        LANG: 'en_US.ascii'
        LC_ALL: 'en_US.ascii'
      Python27LinuxASCIIPython:
        imageName: 'ubuntu-20.04'
        python.version: '2.7'
        PYTHONIOENCODING: 'ascii'
      Python27Windows:
        imageName: 'vs2017-win2016'
        python.version: '2.7'
      Python27Mac:
        imageName: 'macOS-10.15'
        python.version: '2.7'
      Python36Linux:
        imageName: 'ubuntu-20.04'
        python.version: '3.6'
      Python36Windows:
        imageName: 'vs2017-win2016'
        python.version: '3.6'
      Python36Mac:
        imageName: 'macOS-10.15'
        python.version: '3.6'
      Python37Linux:
        imageName: 'ubuntu-20.04'
        python.version: '3.7'
      Python37Windows:
        imageName: 'vs2017-win2016'
        python.version: '3.7'
      Python37Mac:
        imageName: 'macOS-10.15'
        python.version: '3.7'
      Python38Linux:
        imageName: 'ubuntu-20.04'
        python.version: '3.8'
      Python38Windows:
        imageName: 'vs2017-win2016'
        python.version: '3.8'
      Python38Mac:
        imageName: 'macOS-10.15'
        python.version: '3.8'
      Python39Linux:
        imageName: 'ubuntu-20.04'
        python.version: '3.9'
      Python39Windows:
        imageName: 'vs2017-win2016'
        python.version: '3.9'
      Python39Mac:
        imageName: 'macOS-10.15'
        python.version: '3.9'
      Python310Linux:
        imageName: 'ubuntu-20.04'
        python.version: '3.10'
      Python310Windows:
        imageName: 'vs2017-win2016'
        python.version: '3.10'
    maxParallel: 4
  pool:
    vmImage: $(imageName)

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
      architecture: 'x64'

  - script: python -m pip install --upgrade pip
    displayName: 'Install dependencies'

  - script: |
      python -c "import locale; print('Preferred encoding:', locale.getpreferredencoding())"
      python -c "import sys; print('stdout encoding:', sys.stdout.encoding)"
      env
      pip install pytest
      python -m pytest -s wasabi
    displayName: 'Run tests'

  - script: python setup.py sdist
    displayName: 'Test sdist'
